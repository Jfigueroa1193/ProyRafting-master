//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BackEnd.Entities
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class BDContext : DbContext
    {
        public BDContext()
            : base("name=BDContext")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Colaboradores> Colaboradores { get; set; }
        public virtual DbSet<Equipo> Equipo { get; set; }
        public virtual DbSet<Historial> Historial { get; set; }
        public virtual DbSet<Operacion> Operacion { get; set; }
        public virtual DbSet<Reservas> Reservas { get; set; }
        public virtual DbSet<Roles> Roles { get; set; }
        public virtual DbSet<Servicio> Servicio { get; set; }
        public virtual DbSet<Usuarios> Usuarios { get; set; }
    
        public virtual ObjectResult<string> sp_getRolesForUser(string nombreUsuario)
        {
            var nombreUsuarioParameter = nombreUsuario != null ?
                new ObjectParameter("nombreUsuario", nombreUsuario) :
                new ObjectParameter("nombreUsuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_getRolesForUser", nombreUsuarioParameter);
        }
    
        public virtual ObjectResult<string> sp_getUsuariosRole(string nombreRol)
        {
            var nombreRolParameter = nombreRol != null ?
                new ObjectParameter("nombreRol", nombreRol) :
                new ObjectParameter("nombreRol", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_getUsuariosRole", nombreRolParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> sp_isUserInRole(string nombreUsuario, string nombreRol)
        {
            var nombreUsuarioParameter = nombreUsuario != null ?
                new ObjectParameter("nombreUsuario", nombreUsuario) :
                new ObjectParameter("nombreUsuario", typeof(string));
    
            var nombreRolParameter = nombreRol != null ?
                new ObjectParameter("nombreRol", nombreRol) :
                new ObjectParameter("nombreRol", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("sp_isUserInRole", nombreUsuarioParameter, nombreRolParameter);
        }
    }
}
